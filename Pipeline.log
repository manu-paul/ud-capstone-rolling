Branch indexing
Connecting to https://api.github.com using capstone/****** (GitHub Access Token)
Obtained Jenkinsfile from a1169fed29ae5af00fe5a5484d43aaf511fee203
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/capstone_main
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: NONE
using credential github
 > git rev-parse --is-inside-work-tree # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/manu-paul/capstone.git # timeout=10
Cleaning workspace
 > git rev-parse --verify HEAD # timeout=10
Resetting working tree
 > git reset --hard # timeout=10
 > git clean -fdx # timeout=10
Fetching without tags
Fetching upstream changes from https://github.com/manu-paul/capstone.git
 > git --version # timeout=10
 > git --version # 'git version 2.17.1'
using GIT_ASKPASS to set credentials GitHub Access Token
 > git fetch --no-tags --progress -- https://github.com/manu-paul/capstone.git +refs/heads/main:refs/remotes/origin/main # timeout=10
Checking out Revision a1169fed29ae5af00fe5a5484d43aaf511fee203 (main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f a1169fed29ae5af00fe5a5484d43aaf511fee203 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D main # timeout=10
 > git checkout -b main a1169fed29ae5af00fe5a5484d43aaf511fee203 # timeout=10
Commit message: "Update capstone-deploy.yml"
 > git rev-list --no-walk 5634337bfa74bca835d3504ce32e7cbba6269fc3 # timeout=10
Cleaning workspace
 > git rev-parse --verify HEAD # timeout=10
Resetting working tree
 > git reset --hard # timeout=10
 > git clean -fdx # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Lint HTML)
[Pipeline] sh
+ tidy -q -e index.html
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Docker Image)
[Pipeline] sh
+ docker build -t capstone .
Sending build context to Docker daemon  126.5kB

Step 1/3 : FROM nginx:latest
 ---> ae2feff98a0c
Step 2/3 : COPY index.html /usr/share/nginx/html
 ---> Using cache
 ---> 0d5b7b84e828
Step 3/3 : EXPOSE 80
 ---> Using cache
 ---> e4e022c49d42
Successfully built e4e022c49d42
Successfully tagged capstone:latest
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push Docker Image)
[Pipeline] withDockerRegistry
$ docker login -u pmanu1977 -p ******** https://index.docker.io/v1/
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /var/lib/jenkins/workspace/capstone_main@tmp/813ec1a5-b10b-4554-820f-c0dc69ba3129/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
[Pipeline] {
[Pipeline] sh
+ docker tag capstone pmanu1977/capstone
[Pipeline] sh
+ docker push pmanu1977/capstone
Using default tag: latest
The push refers to repository [docker.io/pmanu1977/capstone]
ca6213b26ebe: Preparing
4eaf0ea085df: Preparing
2c7498eef94a: Preparing
7d2b207c2679: Preparing
5c4e5adc71a8: Preparing
87c8a1d8f54f: Preparing
87c8a1d8f54f: Waiting
ca6213b26ebe: Layer already exists
4eaf0ea085df: Layer already exists
5c4e5adc71a8: Layer already exists
7d2b207c2679: Layer already exists
2c7498eef94a: Layer already exists
87c8a1d8f54f: Layer already exists
latest: digest: sha256:26e260b12c7a170c95129ab8d9fc708c53a4ca7eeb7c2e95746da22bdf16be35 size: 1569
[Pipeline] }
[Pipeline] // withDockerRegistry
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploying)
[Pipeline] echo
Deploying to AWS...
[Pipeline] withAWS
Constructing AWS CredentialsSetting AWS region us-west-2 
 [Pipeline] {
[Pipeline] sh
+ aws eks --region us-west-2 update-kubeconfig --name capstone
Updated context arn:aws:eks:us-west-2:944378258408:cluster/capstone in /var/lib/jenkins/.kube/config
[Pipeline] sh
+ kubectl config use-context arn:aws:eks:us-west-2:944378258408:cluster/capstone
Switched to context "arn:aws:eks:us-west-2:944378258408:cluster/capstone".
[Pipeline] sh
+ kubectl apply -f capstone-deploy.yml
deployment.apps/capstone unchanged
service/capstone created
[Pipeline] sh
+ kubectl get nodes
NAME                                           STATUS   ROLES    AGE     VERSION
ip-192-168-20-52.us-west-2.compute.internal    Ready    <none>   4h20m   v1.17.12-eks-7684af
ip-192-168-27-81.us-west-2.compute.internal    Ready    <none>   4h19m   v1.17.12-eks-7684af
ip-192-168-67-167.us-west-2.compute.internal   Ready    <none>   4h20m   v1.17.12-eks-7684af
[Pipeline] sh
+ kubectl get deployment
NAME       READY   UP-TO-DATE   AVAILABLE   AGE
capstone   3/3     3            3           4m53s
[Pipeline] sh
+ kubectl get pod -o wide
NAME                        READY   STATUS    RESTARTS   AGE     IP              NODE                                           NOMINATED NODE   READINESS GATES
capstone-85cc7f57cf-66ql6   1/1     Running   0          4m54s   192.168.76.77   ip-192-168-67-167.us-west-2.compute.internal   <none>           <none>
capstone-85cc7f57cf-bsrp8   1/1     Running   0          4m54s   192.168.4.24    ip-192-168-20-52.us-west-2.compute.internal    <none>           <none>
capstone-85cc7f57cf-lgt64   1/1     Running   0          4m54s   192.168.18.63   ip-192-168-27-81.us-west-2.compute.internal    <none>           <none>
[Pipeline] sh
+ kubectl get service/capstone
NAME       TYPE           CLUSTER-IP       EXTERNAL-IP                                                              PORT(S)        AGE
capstone   LoadBalancer   10.100.192.100   a8344910beb3b4071a420698ef9d2fe0-442038439.us-west-2.elb.amazonaws.com   80:30001/TCP   4s
[Pipeline] }
[Pipeline] // withAWS
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Cleaning up)
[Pipeline] echo
Cleaning up...
[Pipeline] sh
+ docker system prune
WARNING! This will remove:
  - all stopped containers
  - all networks not used by at least one container
  - all dangling images
  - all dangling build cache

Are you sure you want to continue? [y/N] 
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline

GitHub has been notified of this commitâ€™s build result

Finished: SUCCESS
